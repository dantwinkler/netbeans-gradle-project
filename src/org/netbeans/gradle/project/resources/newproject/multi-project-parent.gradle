//
// This file is to applied to every subproject.
//

apply plugin: 'java';
apply plugin: 'maven';

String mavenGroupId = '{$MAVEN_GROUP}';
String mavenVersion = '{$MAVEN_VERSION}';

sourceCompatibility = '${SOURCE_LEVEL}';
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8';

String mavenArtifactId = name;

group = mavenGroupId;
version = mavenVersion;

task sourcesJar(type: Jar, dependsOn: classes, description: 'Creates a jar from the source files.') {
    classifier = 'sources';
    from sourceSets.main.allSource;
}

artifacts {
    archives jar
    archives sourcesJar
}

configure(install.repositories.mavenInstaller) {
    pom.project {
        groupId = mavenGroupId;
        artifactId = mavenArtifactId;
        version = mavenVersion;
    }
}

repositories {
    mavenCentral();
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.10';
}

if (project.hasProperty('mainClass') && mainClass != '') {
    task (run, dependsOn: classes, type: JavaExec) {
        main = mainClass;
        classpath = sourceSets.main.runtimeClasspath;
    }

    task (debug, dependsOn: classes, type: JavaExec) {
        main = mainClass;
        classpath = sourceSets.main.runtimeClasspath;
        debug = true;
    }
}

task createFolders(description: 'Creates the default source folders if they do not exist.') doLast {
    File root = projectDir;
    File main = new File(root, 'main');
    File test = new File(root, 'test');

    new File(main, 'java').mkdirs();
    new File(main, 'resources').mkdirs();
    new File(test, 'java').mkdirs();
    new File(test, 'resources').mkdirs();
}
